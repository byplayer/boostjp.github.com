<html>

<head>
<TITLE>The Boost Format library</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=utf-8">
</head>

<body bgcolor="#FFFFFF" text="#000000">

<table border="1" bgcolor="#007F7F" cellpadding="2">
  <tr>
    <td bgcolor="#FFFFFF"><img src="../../c++boost.gif" alt="c++boost.gif (8819 bytes)" width="277" height="86"></td>
    <td><a href="../../index.htm"><font face="Arial" color="#FFFFFF"><big>Home </big></font></a></td>
    <td><a href="../libraries.htm"><font face="Arial" color="#FFFFFF"><big>Libraries </big></font></a></td>
    <td><a href="../../people/people.htm"><font face="Arial" color="#FFFFFF"><big>People </big></font></a></td>
    <td><a href="../../more/faq.htm"><font face="Arial" color="#FFFFFF"><big>FAQ </big></font></a></td>
    <td><a href="../../more/index.htm"><font face="Arial" color="#FFFFFF"><big>More </big></font></a></td>
  </tr>
</table>

<h1>Boost Format library</h1>

<!--
<p>
The format library provides a class for formatting arguments according to a format-string, 
as does printf, but with two major differences :
<br>
<ul>
<li>format sends the arguments to an internal stream, and so is entirely type-safe and 
naturally supports all user-defined types.</li>
<li>The ellipsis (...) can not be used correctly in the strongly typed context of format,
and thus the function call with arbitrary arguments is replaced by successive calls to an 
<i>argument feeding</i> <b>operator%</b>
</li>
</ul>

</p>
-->
<p>
format ライブラリは、書式文字列に従って引数を書式化するクラスを提供する。これは printf と同様に動作するが、二つの大きな違いがある：
<br>
<ul>
<li>format は引数を内部のストリームに送る。そのため完全に型安全であり、また自ずとあらゆるユーザ定義型をサポートする。</li>
<li>強く型付けされた format の文脈では省略記号 (...) を正しく使うことができない。そのため、任意の個数の引数を伴う関数呼び出しは、<i>引数を食わせる</i> <b>operator%</b> を繰り返し呼び出すことに置き換えられた。
</li>
</ul>

</p>

<!--
<p>
<br>
You can find more Details in :
<ul>
  <li><a href="doc/format.html">Documentation</a> (HTML).</li>
  <li>Headers <ul>
                <li><a href="../../boost/format.hpp">format.hpp</a> : user frontend.</li>
                <li><a href="../../boost/format/format_fwd.hpp">format_fwd.hpp</a> 
                  : user forward declarations.</li>
                <li><a href="../../boost/format/format_class.hpp">
                  format_class.hpp</a> : the class interface</li>
                <li><a href="../../boost/format/format_implementation.hpp">
                    format_implementation.hpp</a>: implementation of the member functions</li>
                <li><a href="../../boost/format/feed_args.hpp">feed_args.hpp</a> 
                  : argument feeding helper functions</li>
                <li><a href="../../boost/format/free_funcs.hpp">free_funcs.hpp</a>
                  : free functions definitions</li>
                <li><a href="../../boost/format/parsing.hpp">parsing.hpp</a>
                  : code for parsing format-strings</li>
                <li><a href="../../boost/format/group.hpp">group.hpp</a>
                  : auxiliary struct used to group arguments and manipulators</li>
                <li><a href="../../boost/format/exceptions.hpp">exceptions.hpp</a>
                  : exceptions used by the library</li>
                <li><a href="../../boost/format/internals.hpp">internals.hpp</a>
                  : auxiliary structs stream_format_state and format_item</li>
              </ul>
            </li>
  <li>Test program <a href="example/">example directory</a></li>
</ul>
Submitted by <a href="../../people/samuel_krempp.htm">Samuel Krempp</a>.</p>
-->
<p>
<br>
詳細は以下を参照：
<ul>
  <li><a href="doc/format.html">Documentation</a> (HTML).</li>
  <li>Headers <ul>
	        <li><a href="../../boost/format.hpp">format.hpp</a> : ユーザフロントエンド。</li>
                <li><a href="../../boost/format/format_fwd.hpp">format_fwd.hpp</a> 
		  : ユーザ先行宣言。</li>
                <li><a href="../../boost/format/format_class.hpp">
		    format_class.hpp</a> : クラスインターフェイス</li>
                <li><a href="../../boost/format/format_implementation.hpp">
		    format_implementation.hpp</a>: メンバ関数の実装</li>
	        <li><a href="../../boost/format/feed_args.hpp">feed_args.hpp</a>
	          : 引数フィーディング補助関数</li>
		<li><a href="../../boost/format/free_funcs.hpp">free_funcs.hpp</a>
		  : 自由関数定義</li>
		<li><a href="../../boost/format/parsing.hpp">parsing.hpp</a>
		  : 書式文字列パージングのコード</li>
		<li><a href="../../boost/format/group.hpp">group.hpp</a>
		  : グループ引数およびマニピュレータのための補助的な構造体</li>
		<li><a href="../../boost/format/exceptions.hpp">exceptions.hpp</a>
		  : ライブラリで使用する例外</li>
	        <li><a href="../../boost/format/internals.hpp">internals.hpp</a>
		  : 補助的な構造体stream_format_stateおよびformat_item</li>
              </ul>
            </li>
  <li>テストプログラム <a href="example/">example directory</a></li>
</ul>
このライブラリは <a href="../../people/samuel_krempp.htm">Samuel Krempp</a> により提供された。</p>
</body>

</html>
