<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=utf-8">
<meta name="Template"
content="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title>Regex++, Format String Reference</title>
</head>

<body bgcolor="#FFFFFF" link="#0000FF" vlink="#800080">

<p>&nbsp; </p>

<table border="0" cellpadding="7" cellspacing="0" width="100%">
    <tr>
        <td valign="top"><h3><img src="../../c++boost.gif"
        alt="C++ Boost" width="276" height="86"></h3>
        </td>
        <td valign="top"><h3 align="center">Regex++, Format
        String Reference.</h3>
        <p align="left"><i>Copyright (c) 1998-2001 </i></p>
        <p align="left"><i>Dr John Maddock</i></p>
        <p align="left"><i>Permission to use, copy, modify,
        distribute and sell this software and its documentation
        for any purpose is hereby granted without fee, provided
        that the above copyright notice appear in all copies and
        that both that copyright notice and this permission
        notice appear in supporting documentation. Dr John
        Maddock makes no representations about the suitability of
        this software for any purpose. It is provided &quot;as is&quot;
        without express or implied warranty.</i></p>
        </td>
    </tr>
</table>

<hr>

<h3><a name="format_string"></a>Format String Syntax</h3>

<!--<p>Format strings are used by the algorithms <a
href="template_class_ref.htm#reg_format">regex_format</a> and <a
href="template_class_ref.htm#reg_merge">regex_merge</a>, and are
used to transform one string into another. </p>-->
<p>書式文字列は、アルゴリズム
<a href="template_class_ref.htm#reg_format">regex_format</a> と
<a href="template_class_ref.htm#reg_merge">regex_merge</a>
で使われている。これは、一つの文字列を別の文字列に変形するために使われる。</p>

<!--<p>There are three kind of format string: sed, perl and extended,
the extended syntax is the default so this is covered first. </p>-->
<p>3種類の書式文字列がある: sed, perl, そして拡張である。
拡張構文はデフォルトなので、最初にこれについて説明する。</p>

<!--<p><b><i>Extended format syntax</i></b> </p>-->
<p><b><i>拡張文字列構文</i></b> </p>

<!--<p>In format strings, all characters are treated as literals
except: ()$\?: </p>-->
<p>書式文字列では、次のものを除く全ての文字はリテラルとして扱われる: ()$\?: </p>

<!--<p>To use any of these as literals you must prefix them with the
escape character \ </p>-->
<p>これらをリテラルとして使うには、エスケープ文字 \ を前につけなければならない。</p>

<!--<p>The following special sequences are recognized: <br>
&nbsp; <br>
&nbsp; </p>-->
<p>次の特別なシーケンスを扱うことが出来る。<br>
&nbsp; <br>
&nbsp; </p>

<!--<p><i>Grouping:</i> </p>-->
<p><i>グループ化:</i> </p>

<p>書式文字列の中で子表現をグループ化するには、丸括弧 ( と ) を使うこと。
リテラル '(' と ')' をあらわすには、 \( と \) を使う。<br>
&nbsp; <br>
&nbsp; </p>

<!--<p><i>Sub-expression expansions:</i> </p>-->
<p><i>子表現展開:</i> </p>

<!--<p>The following perl like expressions expand to a particular
matched sub-expression: <br>
&nbsp; </p>-->
<p>次の perl のような表現は、特定の一致した子表現を展開する。<br>
&nbsp; </p>

<table border="0" cellpadding="7" cellspacing="0" width="100%">
    <tr>
        <td valign="top" width="8%">&nbsp;</td>
        <td valign="top" width="40%">$`</td>
<!--        <td valign="top" width="43%">Expands to all the text from
        the end of the previous match to the start of the current
        match, if there was no previous match in the current
        operation, then everything from the start of the input
        string to the start of the match.</td>-->
        <td valign="top" width="43%">前の一致の終端から現在の一致の先頭までの
	全てのテキストを展開する。もし現在の一致の操作中に前の一致がなければ、
	入力文字列の先頭から現在の一致の先頭までの全てが展開される。</td>
        <td valign="top" width="9%">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top" width="8%">&nbsp;</td>
        <td valign="top" width="40%">$'</td>
<!--        <td valign="top" width="43%">Expands to all the text from
        the end of the match to the end of the input string.</td>-->
        <td valign="top" width="43%">一致の終端から入力文字列の終端までの
	全てのテキストを展開する。</td>
        <td valign="top" width="9%">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top" width="8%">&nbsp;</td>
        <td valign="top" width="40%">$&amp;</td>
<!--        <td valign="top" width="43%">Expands to all of the
        current match.</td>-->
        <td valign="top" width="43%">現在の一致を全て展開する。</td>
        <td valign="top" width="9%">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top" width="8%">&nbsp;</td>
        <td valign="top" width="40%">$0</td>
<!--        <td valign="top" width="43%">Expands to all of the
        current match.</td>-->
        <td valign="top" width="43%">現在の一致を全て展開する。</td>
        <td valign="top" width="9%">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top" width="8%">&nbsp;</td>
        <td valign="top" width="40%">$N</td>
<!--        <td valign="top" width="43%">Expands to the text that
        matched sub-expression <i>N</i>.</td>-->
        <td valign="top" width="43%">子表現 <i>N</i> に一致したテキストを展開する。</td>
        <td valign="top" width="9%">&nbsp;</td>
    </tr>
</table>

<p><br>
&nbsp; </p>

<!--<p><i>Conditional expressions:</i> </p>-->
<p><i>条件付表現:</i> </p>

<p>条件付表現は二つの異なる書式文字列を、
子表現が入力文字列に一致したかどうかに依存して選択することを可能にする：</p>

<!--<p>?Ntrue_expression:false_expression </p>-->
<p>?N 真表現 : 偽表現 </p>

<!--<p>Executes true_expression if sub-expression <i>N</i>
participated in the match, otherwise executes false_expression. </p>-->
<p>もし子表現 <i>N</i> が一致していれば、 真表現が実行される。
そうでなければ偽表現が実行される。</p>

<!--<p>Example: suppose we search for &quot;(while)|(for)&quot; then
the format string &quot;?1WHILE:FOR&quot; would output what
matched, but in upper case. <br>
&nbsp; <br>
&nbsp; </p>-->
<p>例: &quot;(while)|(for)&quot; を検索した時、
書式文字列 &quot;?1WHILE:FOR&quot; は一致したものを大文字にして出力する。<br>
&nbsp; <br>
&nbsp; </p>

<!--<p><i>Escape sequences:</i> </p>-->
<p><i>エスケープシーケンス:</i> </p>

<!--<p>The following escape sequences are also allowed: <br>
&nbsp; </p>-->
<p>次のエスケープシーケンスが可能である:<br>
&nbsp; </p>

<table border="0" cellpadding="7" cellspacing="0" width="100%">
    <tr>
        <td valign="top" width="8%">&nbsp;</td>
        <td valign="top" width="40%">\a</td>
<!--        <td valign="top" width="43%">The bell character.</td>-->
        <td valign="top" width="43%">ベル文字</td>
        <td valign="top" width="9%">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top" width="8%">&nbsp;</td>
        <td valign="top" width="40%">\f</td>
<!--        <td valign="top" width="43%">The form feed character.</td>-->
        <td valign="top" width="43%">フォームフィード(FF)文字</td>
        <td valign="top" width="9%">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top" width="8%">&nbsp;</td>
        <td valign="top" width="40%">\n</td>
<!--        <td valign="top" width="43%">The newline character.</td>-->
        <td valign="top" width="43%">改行</td>
        <td valign="top" width="9%">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top" width="8%">&nbsp;</td>
        <td valign="top" width="40%">\r</td>
<!--        <td valign="top" width="43%">The carriage return
        character.</td>-->
        <td valign="top" width="43%">復帰</td>
        <td valign="top" width="9%">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top" width="8%">&nbsp;</td>
        <td valign="top" width="40%">\t</td>
<!--        <td valign="top" width="43%">The tab character.</td>-->
        <td valign="top" width="43%">タブ</td>
        <td valign="top" width="9%">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top" width="8%">&nbsp;</td>
        <td valign="top" width="40%">\v</td>
<!--        <td valign="top" width="43%">A vertical tab character.</td>-->
        <td valign="top" width="43%">垂直タブ</td>
        <td valign="top" width="9%">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top" width="8%">&nbsp;</td>
        <td valign="top" width="40%">\x</td>
<!--        <td valign="top" width="43%">A hexadecimal character -
        for example \x0D.</td>-->
        <td valign="top" width="43%">16進文字 - 例えば: \x0D</td>
        <td valign="top" width="9%">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top" width="8%">&nbsp;</td>
        <td valign="top" width="40%">\x{}</td>
<!--        <td valign="top" width="43%">A possible unicode
        hexadecimal character - for example \x{1A0}</td>-->
        <td valign="top" width="43%">可能なユニコード16進文字 - 例えば \x{1A0}</td>
        <td valign="top" width="9%">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top" width="8%">&nbsp;</td>
        <td valign="top" width="40%">\cx</td>
<!--        <td valign="top" width="43%">The ASCII escape character
        x, for example \c@ is equivalent to escape-@.</td>-->
        <td valign="top" width="43%">ASCII エスケープ文字 x 、例えば \c@ は escape-@ と等価。</td>
        <td valign="top" width="9%">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top" width="8%">&nbsp;</td>
        <td valign="top" width="40%">\e</td>
<!--        <td valign="top" width="43%">The ASCII escape character.</td>-->
        <td valign="top" width="43%">ASCII エスケープ文字</td>
        <td valign="top" width="9%">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top" width="8%">&nbsp;</td>
        <td valign="top" width="40%">\dd</td>
<!--        <td valign="top" width="43%">An octal character constant,
        for example \10.</td>-->
        <td valign="top" width="43%">8進文字定数、例えば \10</td>
        <td valign="top" width="9%">&nbsp;</td>
    </tr>
</table>

<p><br>
&nbsp; </p>

<!--<p><b><i>Perl format strings</i></b> </p>-->
<p><b><i>Perl 書式文字列</i></b> </p>

<!--<p>Perl format strings are the same as the default syntax except
that the characters ()?: have no special meaning. </p>-->
<p>Perl 書式文字列は文字 ()?: が特別な意味を持たないこと以外は、
デフォルト構文と同じである。</p>

<!--<p><b><i>Sed format strings</i></b> </p>-->
<p><b><i>Sed 書式文字列</i></b> </p>

<!--<p>Sed format strings use only the characters \ and &amp; as
special characters. </p>-->
<p>Sed 書式文字列は、文字 \ と &amp; のみを特殊文字として使う。</p>

<!--<p>\n where n is a digit, is expanded to the nth sub-expression. </p>-->
<p>n が数字のとき、 \n は n 番目の子表現に展開される。</p>

<!--<p>&amp; is expanded to the whole of the match (equivalent to \0).
</p>-->
<p>&amp; は一致全体に展開される。( \0 と等価)。
</p>

<!--<p>Other escape sequences are expanded as per the default syntax.
<br>
</p>-->
<p>他のエスケープシーケンスはデフォルト構文と同じように展開される。<br>
</p>

<hr>

<p><i>Copyright </i><a href="mailto:John_Maddock@compuserve.com"><i>Dr
John Maddock</i></a><i> 1998-2000 all rights reserved.</i> </p>
<hr align="left">
<p><i>Japanese Translation Copyright (C) 2003 <a href="mailto:kohske@msc.biglobe.ne.jp">Kohske Takahashi</a></i></p>
<p>
オリジナルの、及びこの著作権表示が全ての複製の中に現れる限り、この文書の
複製、利用、変更、販売そして配布を認める。このドキュメントは「あるがまま」
に提供されており、いかなる明示的、暗黙的保証も行わない。また、
いかなる目的に対しても、その利用が適していることを関知しない。
</p>

</body>
</html>
